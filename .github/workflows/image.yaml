name: Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [ labeled, unlabeled, opened, synchronize, reopened ]

env:
  GOLANG_VERSION: '1.17.6'

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/test_repo
    steps:
      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Checkout code
        uses: actions/checkout@master
        with:
          path: src/argocd_image_speedup

      # get image tag
      - run: echo ::set-output name=tag::$(cat ./VERSION)-${GITHUB_SHA::8}
        working-directory: ./src/argocd_image_speedup
        id: image

      - name: Login to docker container registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.TOKEN }}
        if: github.event_name == 'push'

      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Ensure docker builds for pull request
        uses: docker/build-push-action@v2
        with:
          context: ./src/argocd_image_speedup
          platforms: linux/amd64
          push: false
        if: github.event_name == 'pull_request' && ! contains(github.event.pull_request.labels.*.name, 'test-arm-image')

      - name: Build and push the latest image
        uses: docker/build-push-action@v2
        with:
          context: ./src/argocd_image_speedup
          platforms: linux/amd64,linux/arm64
          pull: true
          # Change to push: true for pull request
          push: true
          tags: |
            douhunt/test:latest
        if: github.event_name == 'push'

      - name: test-arm-image
        uses: docker/build-push-action@v2
        with:
          context: ./src/argocd_image_speedup
          platforms: linux/amd64,linux/arm64
          push: false
        if: contains(github.event.pull_request.labels.*.name, 'test-arm-image')
